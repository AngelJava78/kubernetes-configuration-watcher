apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: spring-cloud-kubernetes-configuration-watcher
  name: spring-cloud-kubernetes-configuration-watcher
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-role
rules:
  - apiGroups: ["", "extensions", "apps", "discovery.k8s.io"]
    resources: ["configmaps", "pods", "services", "endpoints", "secrets", "endpointslices"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: demo-config-watcher
  name: demo-config-watcher
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: cluster-role
subjects:
  - kind: ServiceAccount
    name: spring-cloud-kubernetes-configuration-watcher
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-cloud-kubernetes-configuration-watcher-deployment
spec:
  selector:
    matchLabels:
      app: spring-cloud-kubernetes-configuration-watcher
  template:
    metadata:
      labels:
        app: spring-cloud-kubernetes-configuration-watcher
    spec:
      serviceAccount: spring-cloud-kubernetes-configuration-watcher
      containers:
      - name: spring-cloud-kubernetes-configuration-watcher
        image: springcloud/spring-cloud-kubernetes-configuration-watcher:3.1.2
        imagePullPolicy: Always
        readinessProbe:
          httpGet:
            port: 8888
            path: /actuator/health/readiness
        livenessProbe:
          httpGet:
            port: 8888
            path: /actuator/health/liveness
        ports:
        - containerPort: 8888
        env:
          - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_CLOUD_KUBERNETES_CONFIGURATION_WATCHER
            value: DEBUG
          - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_CLOUD_KUBERNETES_CLIENT_CONFIG_RELOAD
            value: DEBUG
          - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_CLOUD_KUBERNETES_COMMONS_CONFIG_RELOAD
            value: DEBUG
          - name: logging.level.org.springframework.cloud.kubernetes
            value: "DEBUG"
          - name: SPRING_CLOUD_KUBERNETES_CONFIGURATION_WATCHER_REFRESHDELAY
            value: "60000"
          - name: TZ
            value: "America/Mexico_City"	
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: spring-cloud-kubernetes-configuration-watcher
  name: spring-cloud-kubernetes-configuration-watcher
spec:
  ports:
    - name: http
      port: 8888
      targetPort: 8888
  selector:
    app: spring-cloud-kubernetes-configuration-watcher
  type: NodePort